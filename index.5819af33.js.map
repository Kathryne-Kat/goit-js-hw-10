{"mappings":"YAAO,IAAMA,EAAY,SAAAC,GACrB,OAAOC,MAAM,qCAA8CC,OAATF,IAChDG,MAAK,SAAAC,GAEH,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAMF,EAAIG,QAGxB,OAAOH,EAAII,M,MCLN,CACTC,YAAaC,SAASC,cAAc,eACpCC,cAAeF,SAASC,cAAc,mBAwBrCF,YAAYI,iBAAiB,SAlBZ,SAAAC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAIH,EAAEI,cAAcC,OAC5B,IAAMnB,EAAWc,EAAEI,cAAcC,MAEjCpB,EAAUC,GACLG,MAAK,SAAAiB,GACFJ,QAAQC,IAAIG,E,IAGfC,OAAM,SAAAC,GACHN,QAAQC,IAAIM,I,IAGpBP,QAAQC,IAAIjB,E","sources":["src/fetchCountries.js","src/index.js"],"sourcesContent":["export const fetchCity = cityName => { \n    return fetch(`https://restcountries.com/v2/name/${cityName}`\n    ).then(res => {\n        //console.log(res);\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n        //console.log(res.json());\n        return res.json();\n    });\n};\n\n//fetchCity(peru)\n//,capital,population,flags.svg,lenguages\n\n//console.log();\n\n// fetch(`https://restcountries.com/v2/name/peru`\n//     ).then(response => {\n//         console.log(response);\n//         if (!response.ok) {\n//             throw new Error(response.status);\n//         }\n//         console.log(response.json());\n//         return response.json();\n//     });\n\n\n   // const params = new URLSearchParams({\n    //     name.official,\n    //     capital,\n    //     population,\n    //     flags.svg,\n    //     lenguages\n    // })","import './css/styles.css';\nimport { fetchCity } from './fetchCountries.js';\n\nconst refs = {\n    cityInputEl: document.querySelector('#search-box'),\n    countryMarkup: document.querySelector('.country-list'),\n}\n\n//console.log(refs.cityInputEl.elements);\nconst DEBOUNCE_DELAY = 300;\n\nconst onCityInputEl = e => {\n    e.preventDefault();\n\n    console.log(e.currentTarget.value);\n    const cityName = e.currentTarget.value;\n\n    fetchCity(cityName)\n        .then(data => {\n            console.log(data);\n    \n        })\n        .catch(response => {\n            console.log(err);\n        \n        });\n    console.log(cityName);\n};\n\nrefs.cityInputEl.addEventListener('input', onCityInputEl);\n\nconst criateCountriMarkup = (data) => {\n    return `<img src=\"data.\" alt=\"\">\n<h2>title</h2>\n<div>Capital</div>\n<div>Population</div>\n<div>Languages</div>`\n    \n}"],"names":["$244f2db7c7c4b658$export$f9b5030464ac40b3","cityName","fetch","concat","then","res","ok","Error","status","json","cityInputEl","document","querySelector","countryMarkup","addEventListener","e","preventDefault","console","log","currentTarget","value","data","catch","response","err"],"version":3,"file":"index.5819af33.js.map"}